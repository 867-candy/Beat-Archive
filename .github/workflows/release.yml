name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            npm_script: build:win
          - os: macos-latest
            platform: darwin
            arch: x64
            npm_script: build
          - os: ubuntu-latest
            platform: linux
            arch: x64
            npm_script: build
            
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libgtk-3-dev libgbm-dev
        
    - name: Build application
      run: npm run ${{ matrix.npm_script }}
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
        
    - name: List dist directory (debug)
      run: ls -la dist/
      shell: bash
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-${{ matrix.arch }}
        path: |
          dist/*.exe
          dist/*.dmg
          dist/*.AppImage
          dist/*.deb
          dist/*.rpm
        retention-days: 30
        
  # ポータブル版のビルド（Windows専用）
  build-portable:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build portable version
      run: npm run package
      
    - name: Upload portable artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-portable
        path: dist/
        retention-days: 30

  # タグがpushされた時のリリース作成
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build, build-portable]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: List artifacts (debug)
      run: find . -type f -name "*" | head -20
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          win32-x64/*
          darwin-x64/*
          linux-x64/*
          windows-portable/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
